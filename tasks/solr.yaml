---
- name: Create program directories for Solr
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: solr
    group: solr
    mode: "0755"
    recurse: yes
  loop:
    - "{{ solr.prefix.bin }}"
    - "{{ solr.prefix.home }}"

- name: Create log directory for Solr
  ansible.builtin.file:
    path: "{{ solr.prefix.logs }}"
    state: directory
    owner: solr
    mode: "0755"

- name: Download Solr {{ solr.version }}
  ansible.builtin.get_url:
    url: "https://archive.apache.org/dist/{{ solr_path_segment }}/solr/{{ solr.version }}/solr-{{ solr.version }}.tgz"
    dest: "{{ solr.prefix.bin }}/solr-{{ solr.version }}.tar.gz"
    checksum: "{{ checksum_version }}:https://archive.apache.org/dist/{{ solr_path_segment }}/solr/{{ solr.version }}/solr-{{ solr.version }}.tgz.{{ checksum_version }}"
    owner: solr
    group: solr
    mode: "0644"
  vars:
    solr_path_segment: "{{ 'solr' if solr.version[0] is ansible.builtin.version('9', '>=') else 'lucene' }}"
    checksum_version: "sha512"
  register: solr_get_url_result

- name: Check if {{ solr.prefix.bin }}/bin exists
  register: solr_bin_exists
  ansible.builtin.stat:
    path: "{{ solr.prefix.bin }}/bin"

- name: Check the current Solr version
  changed_when: no
  when: solr_bin_exists
  register: solr_current_version
  ansible.builtin.shell:
    cmd: "{{ solr.prefix.bin }}/bin/solr version"

- name: Handle Solr update
  when: not solr_bin_exists.stat.exists or solr.version not in solr_current_version.stdout
  block:
    - name: Stop Solr service
      changed_when: yes
      ansible.builtin.shell:
        cmd: |
          set -e -u -o pipefail
          sudo supervisorctl stop solr || true

    - name: Kill all solr processes
      changed_when: yes
      failed_when: no
      ansible.builtin.command:
        cmd: "killall -u solr"

    - name: Remove old Solr version
      changed_when: yes
      ansible.builtin.command:
        cmd: >-
          find {{ item | quote }} -mindepth 1 -not -name solr-{{ solr.version | quote }}.tar.gz -delete
      with_items:
        - "{{ solr.prefix.bin }}"

    - name: Unarchive Solr
      notify: Restart Solr
      ignore_errors: "{{ ansible_check_mode }}"
      ansible.builtin.unarchive:
        src: "{{ solr.prefix.bin }}/solr-{{ solr.version }}.tar.gz"
        owner: solr
        group: solr
        dest: "{{ item }}"
        extra_opts:
          - --strip-components=1
        remote_src: yes
      with_items:
        - "{{ solr.prefix.bin }}"

- name: Stop and disable the native rc.d Solr service
  failed_when: no
  ansible.builtin.service:
    name: solr
    state: stopped
    enabled: no
  notify:
    - Start Solr
    - Restart Solr

- name: Install Solr service
  ansible.builtin.template:
    src: supervisord.d/solr.conf
    dest: "/usr/local/etc/supervisord.d/solr.conf"
    owner: root
    group: wheel
    mode: "0755"
  notify:
    - Start Solr
    - Restart Solr

- name: Reload supervisord configuration
  changed_when: no
  ansible.builtin.shell:
    cmd: |
      set -e -u -o pipefail
      sudo supervisorctl update
